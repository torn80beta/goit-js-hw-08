{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","node_modules/simplelightbox/dist/simple-lightbox.esm.js","src/js/01-gallery.js","src/js/gallery-items.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","/*!\r\n\tBy André Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.de\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.12.1\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5,\n        download: false\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    return this.close();\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    generateQuerySelector(elem) {\n        const {\n            tagName,\n            id,\n            className,\n            parentNode\n        } = elem;\n\n        if (tagName === 'HTML') return 'HTML';\n\n        let str = tagName;\n\n        str += (id !== '') ? `#${id}` : '';\n\n        if (className) {\n            const classes = className.trim().split(/\\s/);\n            for (let i = 0; i < classes.length; i++) {\n                str += `.${classes[i]}`;\n            }\n        }\n\n        let childIndex = 1;\n\n        for (let e = elem; e.previousElementSibling; e = e.previousElementSibling) {\n            childIndex += 1;\n        }\n\n        str += `:nth-child(${childIndex})`;\n\n        return `${this.generateQuerySelector(parentNode)} > ${str}`;\n    }\n\n    // generateQuerySelector(el) {\n    //     if (el.tagName.toLowerCase() == \"html\")\n    //         return \"HTML\";\n    //     var str = el.tagName;\n    //     str += (el.id != \"\") ? \"#\" + el.id : \"\";\n    //     if (el.className) {\n    //         var classes = el.className.split(/\\s/);\n    //         for (var i = 0; i < classes.length; i++) {\n    //             str += \".\" + classes[i]\n    //         }\n    //     }\n    //     return this.generateQuerySelector(el.parentNode) + \" > \" + str;\n    // }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.download = document.createElement('div');\n        this.domNodes.download.classList.add('sl-download');\n\n        this.domNodes.downloadLink = document.createElement('a');\n        this.domNodes.downloadLink.setAttribute('download', '');\n        this.domNodes.downloadLink.textContent = this.options.download;\n\n        this.domNodes.download.appendChild(this.domNodes.downloadLink);\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            let captionClasses = this.options.captionClass.split(/[\\s,]+/);\n            this.domNodes.caption.classList.add(...captionClasses);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || (element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')($|\\\\?.*$)', 'i').test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    getScrollbarWidth() {\n        let scrollbarWidth = 0;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.classList.add('sl-scrollbar-measure');\n\n        document.body.appendChild(scrollDiv);\n        scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let paddingRight = parseInt(document.body.style.paddingRight || 0, 10);\n                scrollbarWidth = this.getScrollbarWidth();\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight;\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n            this.domNodes.additionalHtml = null;\n            this.domNodes.download = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self'\n                    ? this.relatedElements[this.currentImageIndex]\n                    : document.querySelector(this.generateQuerySelector(this.relatedElements[this.currentImageIndex]) + ' ' + this.options.captionSelector);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n            if (this.options.download) {\n                this.domNodes.downloadLink.setAttribute('href', this.currentImage.getAttribute('src'));\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        this.globalScrollbarWidth = this.getScrollbarWidth();\n        if (this.options.disableScroll) {\n            this.toggleScrollbar('hide');\n            this.globalScrollbarWidth = 0;\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        if (this.options.download) {\n            this.domNodes.wrapper.appendChild(this.domNodes.download);\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton, this.domNodes.download], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove','mousewheel','DOMMouseScroll'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element) {\n                element.style.opacity = 0;\n                element.style.display = display || \"block\";\n            }\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = currentOpacity;\n                        }\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = opacityTarget;\n                        }\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;\n","import { galleryItems } from './gallery-items.js';\nimport SimpleLightbox from 'simplelightbox/dist/simple-lightbox.esm';\n// Change code below this line\n\nconst galleryEl = document.querySelector('.gallery');\nconst galleryMarkup = galleryItems\n  .map(\n    ({ preview, original, description }) =>\n      `<a class=\"gallery__item\" href=\"${original}\">\n    <img class=\"gallery__image\" src=\"${preview}\" alt=\"${description}\" />\n    </a>`\n  )\n  .join('');\n\ngalleryEl.innerHTML = galleryMarkup;\n\nconst lightBox = new SimpleLightbox('.gallery a', {\n  captions: true,\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n  scrollZoom: false,\n});\n","export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$945867cc3302d81d$var$SimpleLightbox","opts","get","supportsPassive","window","addEventListener","removeEventListener","e","elem","tagName","id","className","parentNode","str","classes","trim","split","i","length","childIndex","previousElementSibling","this","generateQuerySelector","domNodes","overlay","document","createElement","classList","add","dataset","opacityTarget","options","overlayOpacity","closeButton","innerHTML","closeText","spinner","navigation","navText","counter","download","downloadLink","setAttribute","textContent","appendChild","caption","captionPosition","captionClass","captionClasses","image","wrapper","rtl","limit","inThrottle","func","apply","arguments","setTimeout","element","fileExt","getAttribute","sourceAttr","RegExp","test","s","body","documentElement","style","scrollbarWidth","scrollDiv","offsetWidth","clientWidth","removeChild","type","slice","call","querySelectorAll","fixedClass","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","isAppleDevice","paddingRight","parseInt","getScrollbarWidth","originalPaddingRight","forEach","actualPadding","calculatedPadding","getComputedStyle","parseFloat","remove","fixedElements","padding","isOpen","isAnimating","isClosing","relatedElements","currentImageIndex","dispatchEvent","Event","history","historyHasChanges","hashReseted","resetHash","eventNamespace","fadeOut","fadeSpeed","disableScroll","toggleScrollbar","htmlClass","querySelector","additionalHtml","currentImage","controlCoordinates","mousedown","zoomed","capture","initialScale","minMax","maxZoom","doubleTapped","hash","location","substring","index","next","prev","nextImage","Image","prevImage","event","src","target","loadedImages","indexOf","push","direction","slideDirection","newIndex","loop","animationSlide","slide","animationSpeed","swipeDiff","show","contains","adjustImage","preloading","preload","tmpImage","windowWidth","widthRatio","windowHeight","innerHeight","heightRatio","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","initialImageIndex","close","alertError","alert","alertErrorMessage","loadImage","updateURL","captionText","imageWidth","width","imageHeight","height","scaleImageToRatio","ratio","top","globalScrollbarWidth","focus","forceFocus","fadeIn","captionSelector","captionContainer","captions","captionType","captionsData","hide","setCaption","targetOffsetX","targetOffsetY","targetScale","transitionPrefix","min","max","setZoomData","initialLocationHash","bind","hashchangeHandler","getElementsByTagName","currentTarget","match","preventDefault","scrollZoom","containerHeight","getDimensions","containerWidth","imgHeight","imgWidth","containerOffsetX","offsetLeft","containerOffsetY","offsetTop","initialOffsetX","initialOffsetY","delta","wheelDelta","undefined","detail","scrollZoomFactor","scrollTopPos","scrollTop","pinchOffsetX","pageX","pinchOffsetY","pageY","limitOffsetX","limitOffsetY","scaleDifference","opacity","initialPinchDistance","targetPinchDistance","initialPointerOffsetX","clientX","initialPointerOffsetY","clientY","touchCount","touches","doubleTapZoom","initialPointerOffsetX2","initialPointerOffsetY2","sqrt","transitionCapable","imageLeft","swipeYDiff","swipeStart","swipeYStart","pointerOffsetX","pointerOffsetY","touchmoveCount","pointerOffsetX2","pointerOffsetY2","swipeEnd","swipeYEnd","possibleDir","swipeTolerance","swipeClose","isTouchDevice","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","newURL","href","newHash","pushStateSupport","title","replace","urlChangedOnce","back","pushState","pathname","search","historyUpdateTimeout","clearTimeout","updateHash","captionDelay","speed","pos","rel","elems","Array","from","elements","filter","getRelated","showCounter","targetURL","events","callback","wrap","namespaces","isPassiveEventsSupported","passive","duration","element1","getPropertyValue","fade","currentOpacity","step","requestAnimationFrame","element2","isFadeIn","initialDisplay","input","Symbol","iterator","fullyNamespacedEvents","jQuery","openImage","off","initialSelector","selector","destroy","constructor","$parcel$interopDefault","nav","enableKeyboard","docClose","disableRightClick","throttleInterval","uniqueImages","navigator","platform","assign","defaultOptions","checkPassiveEventsSupport","calculateTransitionPrefix","imgArr","createDomNodes","isValidLink","parentElement","throttle","$97d4a16aabe2244a$var$galleryEl","$97d4a16aabe2244a$var$galleryMarkup","preview","original","description","map","join","$945867cc3302d81d$export$2e2bcd8739ae039"],"version":3,"file":"01-gallery.0b16f3b6.js.map"}